{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/responsive-image.js","webpack:///./src/components/article-card.js","webpack:///./src/schema-org/logo.js","webpack:///./src/schema-org/organization.js","webpack:///./src/schema-org/person.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_article_card__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","data","location","a","createElement","title","keywords","className","href","allMarkdownRemark","edges","map","_ref2","node","key","id","article","withImage","withDate","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","ALink","url","test","react_default","gatsby_browser_entry","to","NavItem","active","header_ALink","NavSpacer","Icon","_ref3","src","alt","height","Header","_this","_Component","call","this","header","createRef","headerNav","componentDidMount","current","style","top","offsetHeight","position","headerStyle","image","backgroundImage","encodeURIComponent","role","ref","header_NavItem","startsWith","header_NavSpacer","header_Icon","Component","siteTitle","defaultProps","Layout","_ref$headerImage","headerImage","Fragment","site","siteMetadata","Date","getFullYear","_755544856","responsiveImage","width","queryParams","Number","isInteger","push","react__WEBPACK_IMPORTED_MODULE_2___default","join","articleCard","gatsby__WEBPACK_IMPORTED_MODULE_0__","date_fns__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_3___default","_responsive_image__WEBPACK_IMPORTED_MODULE_4__","_ref$withBody","withBody","_ref$withImage","_ref$withDate","date","fields","slug","frontmatter","excerpt","dateTime","toISOString","formatDate","thumbnail","Logo","@type","@context","Organization","name","logo","sameAs","_organization__WEBPACK_IMPORTED_MODULE_0__","Author","memberOf","givenName","familyName","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","rel","type","JSON","stringify","copyrightHolder","Person","publisher","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-9564acdbf003135fc144.js","sourcesContent":["import React from \"react\"\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport ArticleCard from \"../components/article-card\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({ data, location }) => (\n  <Layout location={location}>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <div className=\"alex-home\">\n        <section className=\"alex-home__section\">\n            <h1><a className=\"heading\" href=\"/blog/\">Recent Content</a></h1>\n            <div className=\"alex-home__tilestack\">\n            {data.allMarkdownRemark.edges.map(({ node }) =>\n              <div key={node.id} className=\"alex-home__tilestack-item\">\n                <ArticleCard article={node} withImage={false} withDate={false} />\n              </div>\n            )}\n            </div>\n        </section>\n    </div>\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: {\n        fields: [frontmatter___date],\n        order: DESC\n    }, limit: 3) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React, {Component} from \"react\"\n\nconst ALink = ({url, children}) => {\n  const isAbsolute = /^(https?:)?\\/\\//\n  return isAbsolute.test(url) ? <a href={url}>{children}</a> : <Link to={url}>{children}</Link>\n}\n\nconst NavItem = ({url, active, children}) => (\n  <li className={`alex-header__nav-item ${active ? \"alex-header__nav-item--active\" : null}`}>\n    <ALink url={url}>{children}</ALink>\n  </li>\n)\n\nconst NavSpacer = () => (\n  <li className=\"alex-header__nav-item alex-header__nav-item--spacer\"></li>\n)\n\nconst Icon = ({src, title}) => (\n  <img\n    src={src}\n    // onerror={`\"this.src='https://imagecdn.app/v2/image/${encodeURIComponent(icon)}?format=png&width=90'\"`}\n    alt={title}\n    className=\"large\"\n    height=\"1em\"\n  />\n)\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props)\n    this.header = React.createRef()\n    this.headerNav = React.createRef()\n  }\n\n  componentDidMount() {\n    this.header.current.style.top = `-${this.header.current.offsetHeight - this.headerNav.current.offsetHeight}px`\n    this.header.current.style.position = \"sticky\"\n  }\n\n  render() {\n\n    const pathname = this.props.location.pathname\n    const headerStyle = {}\n\n    if (this.props.image) {\n      headerStyle.backgroundImage = `url('https://imagecdn.app/v2/image/${encodeURIComponent(this.props.image)}')`\n    }\n\n    return (\n      <header role=\"banner\" className={`alex-header ${this.props.image ? 'alex-header--with-image':null}`} ref={this.header} style={headerStyle}>\n        <div className=\"alex-header--container\">\n\n          <div className=\"alex-header__about\">\n              <h1 className=\"alex-header__name\">Alex Wilson</h1>\n              <span className=\"alex-header__intro\">Software Engineer, Technical Architect — Helping build a better, faster internet.</span>\n          </div>\n\n\n          <nav>\n              <ul className=\"alex-header__nav\" id=\"menu\" ref={this.headerNav}>\n                <NavItem url=\"/\" active={pathname === \"/\"}>Home</NavItem>\n                <NavItem url=\"/about-me/\" active={pathname.startsWith(\"/about-me/\")}>About Me</NavItem>\n                <NavItem url=\"/blog/\" active={pathname.startsWith(\"/blog/\")}>Blog</NavItem>\n                <NavItem url=\"/talks/\" active={pathname.startsWith(\"/talks/\")}>Talks</NavItem>\n\n                <NavSpacer />\n\n                <NavItem url=\"https://twitter.com/antoligy\"><Icon src=\"/svg/twitter.svg\" title=\"Twitter\" /></NavItem>\n                <NavItem url=\"https://www.linkedin.com/in/alex-/\"><Icon src=\"/svg/linkedin.svg\" title=\"LinkedIn\" /></NavItem>\n                <NavItem url=\"https://github.com/antoligy\"><Icon src=\"/svg/github.svg\" title=\"Github\" /></NavItem>\n              </ul>\n          </nav>\n\n      </div>\n    </header>)\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  image: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n  image: null,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"../scss/main.scss\"\n\nconst Layout = ({ location, children, headerImage=null }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} location={location} image={headerImage} />\n        <main>{children}</main>\n        <footer className=\"footer\">\n            <div className=\"container align-center\">\n                <span className=\"text-muted\">\n                &copy; Alex Wilson {new Date().getFullYear()}\n                </span>\n            </div>\n        </footer>\n      </>\n    )}\n  />\n)\n\n// Layout.propTypes = {\n//   children: PropTypes.node.isRequired,\n// }\n\nexport default Layout\n","import React from 'react'\n\nexport default function responsiveImage({src, alt, width, height, className}) {\n\n  const queryParams = []\n  if (Number.isInteger(width)) queryParams.push(`width=${width}`)\n  if (Number.isInteger(height)) queryParams.push(`height=${height}`)\n\n  return (\n    <img\n        src={`https://imagecdn.app/v2/image/${encodeURIComponent(src)}?${queryParams.join('&')}`}\n        className={`responsive ${className}`}\n        alt={alt}\n    />\n  )\n}\n","import { Link } from \"gatsby\"\nimport { format as formatDate } from 'date-fns'\nimport PropTypes, { node } from \"prop-types\"\nimport React from \"react\"\nimport ResponsiveImage from './responsive-image'\n\nexport default function articleCard({article, withBody = true, withImage = true, withDate = true}) {\n\n  const date = new Date(article.fields.date)\n\n  return (\n    <div className=\"alex-card\">\n\n      <div className=\"alex-card__content--container\">\n\n        <div className=\"alex-card__title\">\n          <h3><Link to={ article.fields.slug }>{ article.frontmatter.title }</Link></h3>\n        </div>\n\n        {(withBody !== false) ?\n          <div className=\"alex-card__abstract\">\n          <p>\n            { article.excerpt }\n          </p>\n        </div>\n        :null}\n\n        {(withDate !== false) ?\n          <div className=\"alex-card__timetamp\">\n            <span className=\"dateline\">\n              <time dateTime={date.toISOString()}>{ formatDate(date, \"D MMM YYYY\") }</time>\n            </span>\n          </div>\n        :null}\n\n      </div>\n\n      {(withImage !== false && article.fields.thumbnail) ?\n        <div className=\"alex-card__image\">\n          <ResponsiveImage src={ article.fields.thumbnail } width={ 400 } />\n        </div>\n      :null}\n\n    </div>\n  )\n\n}\n\n// export const query = graphql`\n//   fragment SiteInformation on Site {\n//     siteMetadata {\n//       title\n//       siteDescription\n//     }\n//   }\n// `\n","const Logo = () => ({\n  '@type':'ImageObject',\n  '@context':'http://schema.org',\n  'url':'https://avatars.githubusercontent.com/u/440052',\n  'width': 460,\n  'height': 460\n})\n\nexport default Logo\n","import Logo from './logo'\n\nconst Organization = () => ({\n  '@type': 'Organization',\n  '@context': 'http://schema.org',\n  'name': 'Alex Wilson',\n  'logo': Logo(),\n  'url':'https://alexwilson.tech',\n  'sameAs':[\n    'https://www.twitter.com/antoligy',\n    'https://www.linkedin.com/in/alex-',\n    'https://github.com/antoligy'\n  ]\n})\n\nexport default Organization\n","import Organization from \"./organization\";\n\nconst Author = () => ({\n  '@type':'Person',\n  'name':'Alex',\n  'memberOf': Organization(),\n  'givenName': 'Alex',\n  'familyName': 'Wilson'\n})\n\nexport default Author\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Organization from \"../schema-org/organization\"\nimport Person from \"../schema-org/person\"\n\nfunction SEO({ description, lang, meta, keywords, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s - ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    >\n      <link rel=\"alternate\" type=\"application/rss+xml\" title=\"Alex Wilson's writing via RSS\" href=\"/feed.xml\" />\n      <script type=\"application/ld+json\">{JSON.stringify({\n        \"@type\":\"WebPage\",\n        \"@context\":\"http://schema.org\",\n        \"name\": site.siteMetadata.title,\n        \"description\": site.siteMetadata.description,\n        \"copyrightHolder\": Person(),\n        \"publisher\": Organization()\n      })}</script>\n      {children}\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}