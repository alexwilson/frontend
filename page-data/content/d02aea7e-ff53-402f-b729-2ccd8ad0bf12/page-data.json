{"componentChunkName":"component---src-templates-article-js","path":"/content/d02aea7e-ff53-402f-b729-2ccd8ad0bf12","result":{"data":{"content":{"contentId":"d02aea7e-ff53-402f-b729-2ccd8ad0bf12","title":"How to opt-in (or opt-out) of Slack's new UI","author":{"name":"alex"},"topics":[{"topicId":"b18a2679-9cbc-5b2d-bbb6-16227dfc7a52","topic":"slack","slug":"/topic/slack"},{"topicId":"9eb0ebde-3514-54c9-9a45-3145aabb1bfc","topic":"","slug":"/topic/"}],"date":"Tue Sep 19 2023 16:38:42 GMT+0000 (Coordinated Universal Time)","image":{"image":null,"credit":null},"content":{"html":"<p>S﻿lack's <a href=\"https://slack.com/intl/en-gb/blog/productivity/a-redesigned-slack-built-for-focus\">new UI</a> hits pretty different.﻿ Since it's rolling out <em>slowly</em>, being in multiple organisations is quite jarring as it impacts organisation-switching the most.</p>\n<p>Luckily, it's still possible to opt-in, or opt-out, on a per-organisation basis.</p>\n<h2>Enable Developer mode</h2>\n<p>I﻿f you haven't already, enable developer mode by setting the <code class=\"language-text\">SLACK_DEVELOPER_MENU</code> environment variable to <code class=\"language-text\">true</code>.</p>\n<ul>\n<li>O﻿n macOS or Linux, this could mean adding <code class=\"language-text\">SLACK_DEVELOPER_MENU=true</code> in your profile, and then restarting Slack.</li>\n<li>And for macOS <em>specifically</em>, running <code class=\"language-text\">launchctl setenv SLACK_DEVELOPER_MENU true</code> in a terminal will work until you log-out of your Mac, or switch it off.</li>\n<li>In Windows environments, if you're uncomfortable with <a href=\"https://docs.oracle.com/en/database/oracle/machine-learning/oml4r/1.5.1/oread/creating-and-modifying-environment-variables-on-windows.html\">setting environment variables</a>, then <a href=\"https://www.reddit.com/r/Slack/comments/955dro/how_do_i_open_the_chromium_developer_tools_in_the/\">something like this will work</a>.</li>\n</ul>\n<p>N﻿ext, open the inspector. It <em>should</em> now appear under \"View\" -> \"Developer\" -> \"Toggle DevTools\".  Or if you're used to a Google-Chrome-like browser, do whatever you normally do to open the inspector (Cmd+Shift+I on a Mac).</p>\n<h2>T﻿o enable the new UI</h2>\n<p>Open the inspector, and execute this code in the console:\n<em>(Or, have a read of what it's doing, at the bottom of this post first!)</em></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localConfig_v2\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token keyword\">const</span> settings <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localConfig_v2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    settings<span class=\"token punctuation\">.</span>is_unified_user_client_enabled <span class=\"token operator\">=</span> isEnabled\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>teams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">team</span> <span class=\"token operator\">=></span> team<span class=\"token punctuation\">.</span>is_unified_user_client_enabled <span class=\"token operator\">=</span> isEnabled<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Repeat this on every organisation you want to enable the new UI for, and then refresh.</p>\n<h2>T﻿o disable the new UI</h2>\n<p>Open the inspector, and execute this code in the console:\n<em>(Or, have a read of what it's doing, at the bottom of this post first!)</em></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localConfig_v2\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token keyword\">const</span> settings <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localConfig_v2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    settings<span class=\"token punctuation\">.</span>is_unified_user_client_enabled <span class=\"token operator\">=</span> isEnabled\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>teams<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">team</span> <span class=\"token operator\">=></span> team<span class=\"token punctuation\">.</span>is_unified_user_client_enabled <span class=\"token operator\">=</span> isEnabled<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Repeat this on every organisation you want to enable the new UI for, and then hit refresh.</p>\n<h2>What is the code doing?</h2>\n<ol>\n<li>First we read the current <code class=\"language-text\">localConfig_v2</code> item in localStorage, and deserialise it from JSON.</li>\n<li>We add or change a property called <code class=\"language-text\">is_unified_user_client_enabled</code> which is the feature-flag that Slack are using for the new UI.</li>\n<li>W﻿e iterate over all teams (or organisations) that you're in, and add or change another property <code class=\"language-text\">is_unified_user_client_enabled</code> which is the feature-flag that Slack are using for the new UI</li>\n<li>We then serialise the settings object back into JSON.</li>\n<li>All of this is wrapped in an <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/IIFE\">Immediately-Invoked-Function-Expression</a>, mostly so it's easy to copy-and-paste.</li>\n<li>Finally, we write the newly serialised and modified settings object back into <code class=\"language-text\">localConfig_v2</code></li>\n</ol>\n<p>Why do we have to repeat this per-organisation?  Well: Slack keeps one of these configurations for every organisation you're in, as <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\">localStorage is scoped to a browser origin</a>, and each Slack organisation is a different browser origin.</p>\n<p>That's it!</p>\n<p>Credit to <a href=\"http://aendra.com/\">Ændra</a> for pointing in the right direction!</p>","excerpt":"S﻿lack's new UI hits pretty different.﻿ Since it's rolling out slowly, being in multiple organisations is quite jarring as it impacts…"},"slug":"/content/d02aea7e-ff53-402f-b729-2ccd8ad0bf12"},"site":{"siteMetadata":{"siteUrl":"https://alexwilson.tech"}}},"pageContext":{"contentId":"d02aea7e-ff53-402f-b729-2ccd8ad0bf12"}},"staticQueryHashes":["63159454","955950066"],"slicesMap":{}}