{"version":3,"file":"component---src-templates-article-js-b47b31bf08ac94d36c16.js","mappings":"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","sources":["webpack://@alexwilson/personal-website/../../components/legacy-components/src/share-widget/index.js","webpack://@alexwilson/personal-website/../../components/legacy-components/src/share-widget/share-widget.js","webpack://@alexwilson/personal-website/../../components/legacy-components/src/webmentions/webmentions.js","webpack://@alexwilson/personal-website/../../components/legacy-components/src/webmentions/index.js","webpack://@alexwilson/personal-website/./src/schema-org/article.js","webpack://@alexwilson/personal-website/./src/components/related-articles.js","webpack://@alexwilson/personal-website/./src/templates/article.js"],"sourcesContent":["import './share-widget.scss'\nimport ShareWidget from './share-widget'\nexport {ShareWidget}\nexport default ShareWidget\n","import React from 'react'\n\nconst ShareWidget = ({url, title}) => (\n  <div className=\"alex-share\">\n    <ul>\n      <li>\n        <a href={`https://twitter.com/intent/tweet?url=${url}&amp;text=${title}&amp;related=AlexWilsonV1&amp;via=AlexWilsonV1`}>\n          <img src=\"/svg/twitter.svg\" alt=\"Twitter\" title=\"Share on Twitter\" />\n        </a>\n      </li>\n      <li>\n        <a href={`http://www.facebook.com/sharer.php?u=${url}&amp;t=${title}`}>\n          <img src=\"/svg/facebook.svg\" alt=\"Facebook\" title=\"Share on Facebook\" />\n        </a>\n      </li>\n      <li>\n        <a href={`http://www.linkedin.com/shareArticle?mini=true&amp;url=${url}&amp;title=${title}`}>\n          <img src=\"/svg/linkedin.svg\" alt=\"LinkedIn\" title=\"Share on LinkedIn\" />\n        </a>\n      </li>\n      <li>\n        <a href={`http://reddit.com/submit?url=${url}&amp;title=${title}`}>\n          <img src=\"/svg/reddit.svg\" alt=\"Reddit\" title=\"Share on Reddit\" />\n        </a>\n      </li>\n    </ul>\n  </div>\n)\n\nexport default ShareWidget\n","import fetch from \"isomorphic-fetch\"\nimport React, {Component} from \"react\"\nimport ResponsiveImage from '../responsive-image'\n\nconst webmentionExtractor = wmProperty => mention => mention['wm-property'] === wmProperty\nconst likesFromWebmentions = webmentions => webmentions.filter(webmentionExtractor('like-of'))\nconst mentionsFromWebmentions = webmentions => webmentions.filter(webmentionExtractor('mention-of'))\nconst repostsFromWebmentions = webmentions => webmentions.filter(webmentionExtractor('repost-of'))\nconst repliesFromWebmentions = webmentions => webmentions.filter(webmentionExtractor('reply-of'))\n\nfunction Face({webmention}) {\n  return <a href={webmention.author.url} title={webmention.author.name}>\n    <ResponsiveImage src={webmention.author.photo} width={64} height={64} quality={'lossless'} format={'png'} />\n  </a>\n}\n\nfunction Facestack({webmentions}) {\n  return <ul>{webmentions.map(webmention =>\n      <li key={webmention['wm-id']}><Face webmention={webmention} /></li>\n  )}</ul>\n}\n\nexport default class Webmentions extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: null,\n      isLoaded: false,\n      mentions: [],\n      reposts: [],\n      replies: [],\n      likes: []\n    }\n  }\n\n  async fetchWebmentions(urls) {\n    const webmentions = await Promise.all(\n      urls.map(url => fetch(`https://webmention.io/api/mentions.jf2?target=${url}`)\n        .then(res => res.json())\n        .then(feed => feed.children)\n      )\n    )\n    .then(responses => responses.reduce(\n      (all, fragment) => all.concat(fragment), [])\n    )\n    .catch(console.error)\n\n    this.setState({\n      reposts: repostsFromWebmentions(webmentions),\n      mentions: mentionsFromWebmentions(webmentions),\n      likes: likesFromWebmentions(webmentions),\n      replies: repliesFromWebmentions(webmentions)\n    })\n  }\n\n  componentDidMount() {\n    const urls = this.props.urls || []\n    if (this.props.url) {\n      urls.push(this.props.url)\n    }\n    if (urls.length > 0) {\n      this.fetchWebmentions(urls)\n    }\n  }\n\n  render() {\n\n    const {likes, replies, reposts, mentions} = this.state\n\n    const hasLikes = likes.length > 0\n    const hasReplies = replies.length > 0\n    const hasReposts = reposts.length > 0\n    const hasMentions = mentions.length > 0\n\n    return (this.isLoaded === false) ? null : (\n      <div className=\"alex-webmentions\">\n\n        {!hasLikes ? null :\n        <div className=\"alex-webmentions__likes\">\n          <h3>Likes</h3>\n          <Facestack webmentions={likes} />\n        </div>}\n\n        {!hasReposts ? null :\n        <div className=\"alex-webmentions__reposts\">\n          <h3>Reposts</h3>\n          <Facestack webmentions={reposts} />\n        </div>}\n\n        {/* <div className=\"alex-webmentions--comments\">\n        {[...replies, ...mentions].map(comment =>\n            <a key={comment.author.url} href={comment.author.url} title={comment.author.name}>\n              <ResponsiveImage src={comment.author.photo} />\n              <div __dangerouslySetInnerHTML={{html: comment.content.html}}></div>\n            </a>\n          )}\n        </div> */}\n      </div>\n    )\n  }\n}\n\n","import './webmentions.scss'\nimport Webmentions from './webmentions'\nexport {Webmentions}\nexport default Webmentions\n","import Organization from './organization'\nimport Person from './person'\n\nconst Article = ({\n  url = '',\n  title = '',\n  image = '',\n  description = '',\n  dateModified = new Date(),\n  datePublished = new Date()\n}) => ({\n  '@context':'http://schema.org',\n  '@type':'Article',\n  'mainEntityOfPage': {\n    '@type':'WebPage',\n    '@id':url\n  },\n  'url': url,\n  'headline':title,\n  'dateModified': dateModified.toISOString(),\n  'datePublished': datePublished.toISOString(),\n  'publisher': Organization(),\n  'author': Person(),\n  'image': image,\n  'description': description,\n})\n\nexport default Article\n","import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport ArticleCard from \"@alexwilson/legacy-components/src/article-card\"\n\nexport default ({article: currentArticle}) => {\n  const data = useStaticQuery(graphql`\n    query RelatedArticles {\n      posts: allMarkdownRemark(\n        sort: { order: DESC, fields: [fields___date] }\n        filter: {\n          frontmatter: {\n            date: {ne: null},\n            tags: {ne: null}\n          },\n          fields: {type: {eq: \"posts\"}}\n        }\n        limit: 1000\n      ) {\n        nodes {\n          id\n          fields {\n            slug\n            date\n          }\n          frontmatter {\n            title\n            tags\n          }\n        }\n      }\n    }\n  `)\n\n  const currentArticleTags = currentArticle.frontmatter.tags || []\n\n  const maxArticles = 3\n  const relatedArticles = new Set()\n  for (let granularity = 3; granularity >= 0; granularity--) {\n    if (relatedArticles.size >= maxArticles) break;\n\n    for (const article of data.posts.nodes) {\n      if (article.id === currentArticle.id) continue;\n      if (relatedArticles.size >= maxArticles) break;\n\n      let similarity = 0\n\n      for (const tag of article.frontmatter.tags) {\n        if (currentArticleTags.includes(tag)) {\n          similarity++;\n        }\n      }\n\n      // Match to avoid processing articles multiple times.\n      if (similarity >= granularity && !relatedArticles.has(article)) {\n        relatedArticles.add(article)\n      }\n    }\n\n  }\n\n  return (\n    <>\n      {Array.from(relatedArticles.values()).map(\n        article => <ArticleCard key={article.id} article={article}\n      />)}\n    </>\n  )\n}\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Header from \"@alexwilson/legacy-components/src/header\"\nimport ShareWidget from \"@alexwilson/legacy-components/src/share-widget\"\nimport Webmentions from \"@alexwilson/legacy-components/src/webmentions\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Article from \"../schema-org/article\";\nimport RelatedArticles from \"../components/related-articles\"\n\nconst ArticleTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const url = new URL(location.pathname, data.site.siteMetadata.siteUrl)\n  const alternativeUrl = new URL(post.fields['_legacy_slug'], data.site.siteMetadata.siteUrl)\n\n  const datePublished = new Date(post.frontmatter.date)\n  const dateModified = new Date(post.frontmatter.last_modified_at || datePublished)\n\n  return (\n    <Layout location={location}>\n      <Header location={location} image={post.fields.image} />\n      <div className=\"alex-article\">\n        <div className=\"alex-article__main\">\n          <h1 itemProp=\"name headline\">{post.frontmatter.title}</h1>\n          <div className=\"alex-article__main__byline\">\n            Posted\n\n            {(post.frontmatter.author ?\n              <>\n                {` by `}\n                <span itemProp=\"author\" itemType=\"http://schema.org/Person\">\n                  <a href=\"/\">\n                    <span itemProp=\"name\">Alex</span>\n                  </a>\n                </span>\n              </>\n            :null)}\n\n            {(datePublished ?\n              <>\n                {` on `}\n                <time\n                  className=\"alex-article__main__date\"\n                  dateTime={datePublished}\n                  itemProp=\"datePublished\"\n                >{post.fields.formattedDate}</time>.\n              </>\n            :null)}\n\n            {(post.frontmatter.image_credit ?\n              <>\n                {` ${post.frontmatter.image_credit}`}\n              </>\n            :null)}\n\n          </div>\n          <article\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            className=\"alex-article__body article-description\"\n            itemProp=\"articleBody\"\n          />\n\n          <hr />\n          <h3 className=\"share\">Share</h3>\n          <ShareWidget title={post.frontmatter.title} url={url} />\n          <Webmentions urls={[url, `${url}/`, alternativeUrl]} />\n\n        </div>\n\n\n        <div className=\"alex-article__aside\">\n          {post.frontmatter.tags ?\n          <div className=\"alex-article__topics\">\n            <strong>Topics: </strong>\n            <ul>\n            {post.frontmatter.tags.map(topic => {\n              return <li key={topic}>\n                <Link to={`/topic/${topic}`}>{topic}</Link>\n              </li>\n            })}\n            </ul>\n          </div>:null}\n\n          <div className=\"alex-article__recommended\">\n            <h2>Read Next</h2>\n            <RelatedArticles article={post}/>\n          </div>\n        </div>\n      </div>\n      <SEO title={post.frontmatter.title} description={post.excerpt}>\n        <script type=\"application/ld+json\">{JSON.stringify(Article({\n          url: url,\n          title: post.frontmatter.title,\n          image: post.fields.image,\n          description: post.frontmatter.excerpt,\n          dateModified: dateModified,\n          datePublished: datePublished\n        }))}</script>\n      </SEO>\n    </Layout>\n  )\n}\n\nexport default ArticleTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt\n      frontmatter {\n        title\n        tags\n        date\n        last_modified_at\n        author\n        image_credit\n      }\n      fields {\n        formattedDate: date(formatString: \"dddd, MMMM Do, YYYY\")\n        image\n        date\n        slug\n        _legacy_slug\n      }\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`\n"],"names":["url","title","className","href","src","alt","webmentionExtractor","wmProperty","mention","likesFromWebmentions","webmentions","filter","mentionsFromWebmentions","repostsFromWebmentions","repliesFromWebmentions","Face","webmention","author","name","photo","width","height","quality","format","Facestack","map","key","Webmentions","props","state","error","isLoaded","mentions","reposts","replies","likes","fetchWebmentions","urls","Promise","all","fetch","then","res","json","feed","children","responses","reduce","fragment","concat","catch","console","this","setState","componentDidMount","push","length","render","hasLikes","hasReposts","Component","image","description","dateModified","Date","datePublished","toISOString","Organization","Person","currentArticle","article","data","useStaticQuery","currentArticleTags","frontmatter","tags","relatedArticles","Set","granularity","size","posts","nodes","id","similarity","tag","includes","has","add","Array","from","values","location","post","markdownRemark","URL","pathname","site","siteMetadata","siteUrl","alternativeUrl","fields","date","last_modified_at","itemProp","itemType","dateTime","formattedDate","image_credit","dangerouslySetInnerHTML","__html","html","topic","to","excerpt","type","JSON","stringify","Article"],"sourceRoot":""}