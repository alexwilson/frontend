name: Terraform Deployments

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  lint:
    name: "Lint Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0
      - name: Lint Terraform
        run: terraform fmt -check

  lint-test-vcl:
    name: "Lint & Test VCL files in Terraform modules"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/modules/fastly/vcl
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Test
        run: pwd && ls -Alish
      - name: Lint VCL
        uses: ain/falco-github-action@v1
        with:
          subcommand: lint
          options: "-I ./terraform/modules/fastly/vcl"
          target: ./terraform/modules/fastly/vcl/main.vcl
      - name: Test VCL
        uses: ain/falco-github-action@v1
        with:
          subcommand: test
          options: "-I ./terraform/modules/fastly/vcl"
          target: ./terraform/modules/fastly/vcl/main.vcl

  deploy-to-test:
    needs: [lint, lint-test-vcl]
    concurrency:
      group: ${{ github.workflow }}-test
      cancel-in-progress: false
    runs-on: ubuntu-latest

    env:
      FASTLY_API_KEY: ${{ secrets.TERRAFORM_FASTLY_API_KEY }}
      TF_WORKSPACE: "test"
      TF_LOG: "warn"

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}

      - name: Set-up test workspace
        run: |
          terraform init

      - name: Apply test configuration
        run: terraform apply -auto-approve -var-file=environments/test.tfvars

      - name: Run tests against test
        run: |
          echo "Imagine these are real tests"

  deploy-to-prod:
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    concurrency:
      group: ${{ github.workflow }}-prod
      cancel-in-progress: false
    runs-on: ubuntu-latest
    needs: deploy-to-test

    env:
      FASTLY_API_KEY: ${{ secrets.TERRAFORM_FASTLY_API_KEY }}
      TF_WORKSPACE: "prod"
      TF_LOG: "warn"

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.0
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}

      - name: Set-up prod workspace
        run: |
          terraform init

      - name: Apply prod configuration
        run: terraform apply -auto-approve -var-file=environments/prod.tfvars

      - name: Run tests against prod
        run: |
          echo "Imagine these are real tests"
