{"version":3,"sources":["webpack:///./src/components/webmentions.js"],"names":["webmentionExtractor","wmProperty","mention","likesFromWebmentions","webmentions","filter","mentionsFromWebmentions","repostsFromWebmentions","repliesFromWebmentions","Face","webmention","href","author","url","title","name","src","photo","width","height","quality","format","Facestack","map","key","Webmentions","props","state","error","isLoaded","mentions","reposts","replies","likes","fetchWebmentions","fetch","then","res","json","feed","children","setState","catch","console","componentDidMount","this","render","hasLikes","length","hasReposts","className","Component"],"mappings":"6MAIA,IAAMA,EAAsB,SAAAC,GAAU,OAAI,SAAAC,GAAO,OAAIA,EAAQ,iBAAmBD,IAC1EE,EAAuB,SAAAC,GAAW,OAAIA,EAAYC,OAAOL,EAAoB,aAC7EM,EAA0B,SAAAF,GAAW,OAAIA,EAAYC,OAAOL,EAAoB,gBAChFO,EAAyB,SAAAH,GAAW,OAAIA,EAAYC,OAAOL,EAAoB,eAC/EQ,EAAyB,SAAAJ,GAAW,OAAIA,EAAYC,OAAOL,EAAoB,cAErF,SAASS,EAAT,GAA6B,IAAdC,EAAa,EAAbA,WACb,OAAO,uBAAGC,KAAMD,EAAWE,OAAOC,IAAKC,MAAOJ,EAAWE,OAAOG,MAC9D,kBAAC,IAAD,CAAiBC,IAAKN,EAAWE,OAAOK,MAAOC,MAAO,GAAIC,OAAQ,GAAIC,QAAS,WAAYC,OAAQ,SAIvG,SAASC,EAAT,GAAmC,IAAflB,EAAc,EAAdA,YAClB,OAAO,4BAAKA,EAAYmB,IAAI,SAAAb,GAAU,OAClC,wBAAIc,IAAKd,EAAW,UAAU,kBAACD,EAAD,CAAMC,WAAYA,Q,IAIjCe,E,oBACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,SAAU,GACVC,QAAS,GACTC,QAAS,GACTC,MAAO,IARQ,E,kHAYnBC,iBAAA,SAAiBrB,GAAM,IAAD,OACpBsB,IAAM,iDAAiDtB,GACpDuB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,WAClBJ,KAAK,SAAAhC,GACJ,EAAKqC,SAAS,CACZV,QAASxB,EAAuBH,GAChC0B,SAAUxB,EAAwBF,GAClC6B,MAAO9B,EAAqBC,GAC5B4B,QAASxB,EAAuBJ,OAGnCsC,MAAMC,QAAQf,Q,EAGnBgB,kBAAA,WACMC,KAAKnB,MAAMb,KACbgC,KAAKX,iBAAiBW,KAAKnB,MAAMb,M,EAIrCiC,OAAA,WAAU,IAAD,EAEqCD,KAAKlB,MAA1CM,EAFA,EAEAA,MAAOD,EAFP,EAEOA,QAASD,EAFhB,EAEgBA,QAASD,EAFzB,EAEyBA,SAE1BiB,EAAWd,EAAMe,OAAS,EAE1BC,GADajB,EAAQgB,OACRjB,EAAQiB,OAAS,GAChBlB,EAASkB,OAE7B,OAA0B,IAAlBH,KAAKhB,SAAsB,KACjC,yBAAKqB,UAAU,oBAEXH,EACF,yBAAKG,UAAU,2BACb,qCACA,kBAAC5B,EAAD,CAAWlB,YAAa6B,KAHb,KAMXgB,EACF,yBAAKC,UAAU,6BACb,uCACA,kBAAC5B,EAAD,CAAWlB,YAAa2B,KAHX,O,GApDkBoB","file":"13-f09d5583ebe5bf370b14.js","sourcesContent":["import fetch from \"isomorphic-fetch\"\nimport React, {Component} from \"react\"\nimport ResponsiveImage from './responsive-image'\n\nconst webmentionExtractor = wmProperty => mention => mention['wm-property'] === wmProperty\nconst likesFromWebmentions = webmentions => webmentions.filter(webmentionExtractor('like-of'))\nconst mentionsFromWebmentions = webmentions => webmentions.filter(webmentionExtractor('mention-of'))\nconst repostsFromWebmentions = webmentions => webmentions.filter(webmentionExtractor('repost-of'))\nconst repliesFromWebmentions = webmentions => webmentions.filter(webmentionExtractor('reply-of'))\n\nfunction Face({webmention}) {\n  return <a href={webmention.author.url} title={webmention.author.name}>\n    <ResponsiveImage src={webmention.author.photo} width={64} height={64} quality={'lossless'} format={'png'} />\n  </a>\n}\n\nfunction Facestack({webmentions}) {\n  return <ul>{webmentions.map(webmention =>\n      <li key={webmention['wm-id']}><Face webmention={webmention} /></li>\n  )}</ul>\n}\n\nexport default class Webmentions extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: null,\n      isLoaded: false,\n      mentions: [],\n      reposts: [],\n      replies: [],\n      likes: []\n    }\n  }\n\n  fetchWebmentions(url) {\n    fetch(`https://webmention.io/api/mentions.jf2?target=${url}`)\n      .then(res => res.json())\n      .then(feed => feed.children)\n      .then(webmentions => {\n        this.setState({\n          reposts: repostsFromWebmentions(webmentions),\n          mentions: mentionsFromWebmentions(webmentions),\n          likes: likesFromWebmentions(webmentions),\n          replies: repliesFromWebmentions(webmentions)\n        })\n      })\n      .catch(console.error)\n  }\n\n  componentDidMount() {\n    if (this.props.url) {\n      this.fetchWebmentions(this.props.url)\n    }\n  }\n\n  render() {\n\n    const {likes, replies, reposts, mentions} = this.state\n\n    const hasLikes = likes.length > 0\n    const hasReplies = replies.length > 0\n    const hasReposts = reposts.length > 0\n    const hasMentions = mentions.length > 0\n\n    return (this.isLoaded === false) ? null : (\n      <div className=\"alex-webmentions\">\n\n        {!hasLikes ? null :\n        <div className=\"alex-webmentions__likes\">\n          <h3>Likes</h3>\n          <Facestack webmentions={likes} />\n        </div>}\n\n        {!hasReposts ? null :\n        <div className=\"alex-webmentions__reposts\">\n          <h3>Reposts</h3>\n          <Facestack webmentions={reposts} />\n        </div>}\n\n        {/* <div className=\"alex-webmentions--comments\">\n        {[...replies, ...mentions].map(comment =>\n            <a key={comment.author.url} href={comment.author.url} title={comment.author.name}>\n              <ResponsiveImage src={comment.author.photo} />\n              <div __dangerouslySetInnerHTML={{html: comment.content.html}}></div>\n            </a>\n          )}\n        </div> */}\n      </div>\n    )\n  }\n}\n\n"],"sourceRoot":""}