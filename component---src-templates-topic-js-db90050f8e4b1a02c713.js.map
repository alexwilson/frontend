{"version":3,"file":"component---src-templates-topic-js-db90050f8e4b1a02c713.js","mappings":"0LA2CA,UArCuB,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnCC,EAAUH,EAAVG,MACAC,EAAeH,EAAKI,kBAApBD,WAER,OAAQ,gBAAC,IAAD,CAAQF,SAAUA,GACxB,uBAAKI,MAAM,eACT,0BAAQF,EAAR,SAAyC,IAAfA,EAAmB,GAAK,KAAlD,iBAAsED,EAAtE,KACCF,EAAKI,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAC9B,gBAAC,IAAD,CAAaC,IAAKD,EAAKE,GAAIC,QAASH","sources":["webpack://@alexwilson/personal-website/./src/templates/topic.js"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ArticleCard from \"@alexwilson/legacy-components/src/article-card\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nconst TopicsTemplate = ({ pageContext, data, location }) => {\n  const { topic } = pageContext\n  const { totalCount } = data.allMarkdownRemark\n\n  return (<Layout location={location}>\n    <div class=\"alex-stream\">\n      <h1>{`${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${topic}\"`}</h1>\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n          <ArticleCard key={node.id} article={node} />\n      ))}\n    </div>\n  </Layout>)\n}\n\nTopicsTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default TopicsTemplate\n\nexport const pageQuery = graphql`\n  query($topic: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$topic] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n            date\n          }\n          frontmatter {\n            title\n            date\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"names":["pageContext","data","location","topic","totalCount","allMarkdownRemark","class","edges","map","node","key","id","article"],"sourceRoot":""}